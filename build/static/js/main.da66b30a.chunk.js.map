{"version":3,"sources":["services/personsService.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","personsService","axios","get","then","response","data","newObject","post","App","_useState","useState","_useState2","_slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","initialPersons","React","createElement","map","person","className","name","number","onSubmit","event","preventDefault","returnedPerson","concat","catch","error","setTimeout","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qNACMA,EAAU,oCAiBDC,EAfA,WAEb,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAAAM,GAEb,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCwF5BG,EA9FD,WAAM,IAAAC,EAEcC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAAAI,EACIL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAAAG,EACQT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACUb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAKpCG,oBAAU,WACR3B,IAEGG,KAAK,SAAAyB,GACJd,EAAWc,MAEd,IAmDD,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,WACHL,EACDI,IAAAC,cAAA,UACED,IAAAC,cAAA,UACGjB,EAAQkB,IAAI,SAAAC,GAAM,OACZH,IAAAC,cAAA,MAAIG,UAAU,UACbD,EAAOE,KACPF,EAAOG,YAMnBN,IAAAC,cAAA,QAAMM,SA/DM,SAACC,GACjBA,EAAMC,iBAMNtC,EALqB,CACnBkC,KAAMjB,EACNkB,OAAQd,IAKPlB,KAAK,SAAAoC,GACJzB,EAAWD,EAAQ2B,OAAOD,IAC1BrB,EAAW,IACXI,EAAa,MACZmB,MAAM,SAAAC,GACPhB,EAAgBgB,EAAMtC,SAASC,KAAKqC,OACpCC,WAAW,WACTjB,EAAgB,OACf,SA+CHG,IAAAC,cAAA,SAAOc,MAAO3B,EAAS4B,SArCF,SAACR,GACxBnB,EAAWmB,EAAMS,OAAOF,UAqCtBf,IAAAC,cAAA,SAAOc,MAAOvB,EAAWwB,SA3CF,SAACR,GAC1Bf,EAAae,EAAMS,OAAOF,UA2CtBf,IAAAC,cAAA,UAAQiB,KAAK,UAAS,WC7EnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAjD,KAAAgD,EAAAE,KAAA,UAAqBlD,KAAK,SAAAmD,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACtB,EAAG,QAORwC","file":"static/js/main.da66b30a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update \r\n}","import React from 'react';\r\nimport personsService from \"./services/personsService\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\n  const App = () => {\r\n    \r\n    const [persons, setPersons] = useState([]) \r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    \r\n  \r\n\r\n\r\n    useEffect(() => {\r\n      personsService\r\n        .getAll()\r\n        .then(initialPersons => {\r\n          setPersons(initialPersons)\r\n        })\r\n    }, [])\r\n  \r\n  \r\n    const addPerson = (event) => {\r\n      event.preventDefault()\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n      }\r\n  \r\n      personsService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        }).catch(error => {\r\n          setErrorMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          \r\n        })\r\n      }\r\n\r\n      const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n      }\r\n\r\n\r\n      const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n      // personsService\r\n      // .update(id, changedPerson).then(returnedPerson => {\r\n      //   setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n      // })\r\n      // .catch(error => {\r\n      //   setErrorMessage(\r\n      //     `Person '${person.name}' was already removed from server`\r\n      //   )\r\n      //   setTimeout(() => {\r\n      //     setErrorMessage(null)\r\n      //   }, 5000)\r\n      //   setPersons(persons.filter(p => p.id !== id))\r\n      // })\r\n\r\n\r\n\r\n\r\n      return (\r\n        <div>\r\n          <h1>Persons</h1>\r\n          {errorMessage}\r\n          <ul>\r\n            <ul>\r\n              {persons.map(person => \r\n                     <li className='person'>\r\n                     {person.name} \r\n                     {person.number} \r\n                   </li>\r\n              )}\r\n            </ul>\r\n          </ul>\r\n\r\n          <form onSubmit={addPerson}>\r\n          <input value={newName} onChange={handleNameChange} />\r\n          <input value={newNumber} onChange={handleNumberChange} />\r\n            <button type=\"submit\">save</button>\r\n          </form>\r\n        </div>\r\n      )\r\n    \r\n              }\r\n    // ...\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}